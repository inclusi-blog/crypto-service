// Code generated by MockGen. DO NOT EDIT.
// Source: configuration/publickey_mapping_config.go

// Package mocks is a generated GoMock package.
package mocks

import (
	models "crypto-service/models"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockPublickeyMappingConfiguration is a mock of PublickeyMappingConfiguration interface
type MockPublickeyMappingConfiguration struct {
	ctrl     *gomock.Controller
	recorder *MockPublickeyMappingConfigurationMockRecorder
}

// MockPublickeyMappingConfigurationMockRecorder is the mock recorder for MockPublickeyMappingConfiguration
type MockPublickeyMappingConfigurationMockRecorder struct {
	mock *MockPublickeyMappingConfiguration
}

// NewMockPublickeyMappingConfiguration creates a new mock instance
func NewMockPublickeyMappingConfiguration(ctrl *gomock.Controller) *MockPublickeyMappingConfiguration {
	mock := &MockPublickeyMappingConfiguration{ctrl: ctrl}
	mock.recorder = &MockPublickeyMappingConfigurationMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockPublickeyMappingConfiguration) EXPECT() *MockPublickeyMappingConfigurationMockRecorder {
	return m.recorder
}

// GetKeyData mocks base method
func (m *MockPublickeyMappingConfiguration) GetKeyData(keyId string) (models.KeyData, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetKeyData", keyId)
	ret0, _ := ret[0].(models.KeyData)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetKeyData indicates an expected call of GetKeyData
func (mr *MockPublickeyMappingConfigurationMockRecorder) GetKeyData(keyId interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetKeyData", reflect.TypeOf((*MockPublickeyMappingConfiguration)(nil).GetKeyData), keyId)
}
